FROM golang:alpine AS development

# Install build dependencies for CGO (required for SQLite)
RUN apk add --no-cache gcc musl-dev sqlite-dev

# Install air for hot reloading
RUN go install github.com/air-verse/air@latest

WORKDIR /app

# Set CGO_ENABLED=1 for SQLite support
ENV CGO_ENABLED=1

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build plugins (ensure Make is available or use direct go build commands)
# Assuming make is available in golang:alpine or can be added.
# If not, replicate the build logic from Makefile here.
RUN apk add --no-cache make # Add make if not present
RUN make build-plugins

# Build the main application binary
RUN go build -o /app/tmp/main /app/cmd/viewra/main.go

# Create data directory for SQLite
RUN mkdir -p /app/data

# Expose port
EXPOSE 8080

# CMD ["air", "-c", ".air.toml"]
# CMD ["./tmp/main"]
CMD ["go", "run", "./cmd/viewra/main.go"]
