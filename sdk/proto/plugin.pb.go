// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// APIRoute message for route registration
type APIRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // string plugin_id = 4; // Plugin ID will be known by the manager
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIRoute) Reset() {
	*x = APIRoute{}
	mi := &file_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIRoute) ProtoMessage() {}

func (x *APIRoute) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIRoute.ProtoReflect.Descriptor instead.
func (*APIRoute) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *APIRoute) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *APIRoute) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *APIRoute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetRegisteredRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegisteredRoutesRequest) Reset() {
	*x = GetRegisteredRoutesRequest{}
	mi := &file_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegisteredRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredRoutesRequest) ProtoMessage() {}

func (x *GetRegisteredRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredRoutesRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredRoutesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

type GetRegisteredRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*APIRoute            `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegisteredRoutesResponse) Reset() {
	*x = GetRegisteredRoutesResponse{}
	mi := &file_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegisteredRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredRoutesResponse) ProtoMessage() {}

func (x *GetRegisteredRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredRoutesResponse.ProtoReflect.Descriptor instead.
func (*GetRegisteredRoutesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *GetRegisteredRoutesResponse) GetRoutes() []*APIRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

// Asset service messages
type SaveAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaFileId   string                 `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId,proto3" json:"media_file_id,omitempty"`                                                // Changed from uint32 to string for UUID support
	AssetType     string                 `protobuf:"bytes,2,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`                                                        // "music", "video", etc.
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`                                                                           // "album", "artist", etc.
	Subtype       string                 `protobuf:"bytes,4,opt,name=subtype,proto3" json:"subtype,omitempty"`                                                                             // "artwork", "poster", etc.
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                                                                   // The actual asset data
	MimeType      string                 `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`                                                           // MIME type of the asset
	SourceUrl     string                 `protobuf:"bytes,7,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`                                                        // Original URL if downloaded
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata (width, height, etc.)
	PluginId      string                 `protobuf:"bytes,9,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`                                                           // Plugin identifier for asset tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveAssetRequest) Reset() {
	*x = SaveAssetRequest{}
	mi := &file_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetRequest) ProtoMessage() {}

func (x *SaveAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetRequest.ProtoReflect.Descriptor instead.
func (*SaveAssetRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *SaveAssetRequest) GetMediaFileId() string {
	if x != nil {
		return x.MediaFileId
	}
	return ""
}

func (x *SaveAssetRequest) GetAssetType() string {
	if x != nil {
		return x.AssetType
	}
	return ""
}

func (x *SaveAssetRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SaveAssetRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *SaveAssetRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SaveAssetRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SaveAssetRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *SaveAssetRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SaveAssetRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

type SaveAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	AssetId       uint32                 `protobuf:"varint,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`               // ID of the saved asset
	Hash          string                 `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`                                     // Hash of the saved asset
	RelativePath  string                 `protobuf:"bytes,5,opt,name=relative_path,json=relativePath,proto3" json:"relative_path,omitempty"` // Path where asset was saved
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveAssetResponse) Reset() {
	*x = SaveAssetResponse{}
	mi := &file_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAssetResponse) ProtoMessage() {}

func (x *SaveAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAssetResponse.ProtoReflect.Descriptor instead.
func (*SaveAssetResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *SaveAssetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SaveAssetResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SaveAssetResponse) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *SaveAssetResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SaveAssetResponse) GetRelativePath() string {
	if x != nil {
		return x.RelativePath
	}
	return ""
}

type AssetExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaFileId   string                 `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId,proto3" json:"media_file_id,omitempty"` // Changed from uint32 to string for UUID support
	AssetType     string                 `protobuf:"bytes,2,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Subtype       string                 `protobuf:"bytes,4,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Hash          string                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"` // Optional: check by hash
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetExistsRequest) Reset() {
	*x = AssetExistsRequest{}
	mi := &file_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetExistsRequest) ProtoMessage() {}

func (x *AssetExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetExistsRequest.ProtoReflect.Descriptor instead.
func (*AssetExistsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *AssetExistsRequest) GetMediaFileId() string {
	if x != nil {
		return x.MediaFileId
	}
	return ""
}

func (x *AssetExistsRequest) GetAssetType() string {
	if x != nil {
		return x.AssetType
	}
	return ""
}

func (x *AssetExistsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AssetExistsRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *AssetExistsRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type AssetExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	AssetId       uint32                 `protobuf:"varint,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`               // ID if exists
	RelativePath  string                 `protobuf:"bytes,3,opt,name=relative_path,json=relativePath,proto3" json:"relative_path,omitempty"` // Path if exists
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetExistsResponse) Reset() {
	*x = AssetExistsResponse{}
	mi := &file_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetExistsResponse) ProtoMessage() {}

func (x *AssetExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetExistsResponse.ProtoReflect.Descriptor instead.
func (*AssetExistsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *AssetExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *AssetExistsResponse) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetExistsResponse) GetRelativePath() string {
	if x != nil {
		return x.RelativePath
	}
	return ""
}

type RemoveAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       uint32                 `protobuf:"varint,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAssetRequest) Reset() {
	*x = RemoveAssetRequest{}
	mi := &file_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssetRequest) ProtoMessage() {}

func (x *RemoveAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssetRequest.ProtoReflect.Descriptor instead.
func (*RemoveAssetRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveAssetRequest) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type RemoveAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAssetResponse) Reset() {
	*x = RemoveAssetResponse{}
	mi := &file_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssetResponse) ProtoMessage() {}

func (x *RemoveAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssetResponse.ProtoReflect.Descriptor instead.
func (*RemoveAssetResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveAssetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveAssetResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Search service messages
type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         map[string]string      `protobuf:"bytes,1,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Flexible query parameters (title, artist, album, etc.)
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                                                          // Maximum number of results
	Offset        uint32                 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                                                                        // Offset for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRequest) GetQuery() map[string]string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SearchRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Results       []*SearchResult        `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    uint32                 `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total results available
	HasMore       bool                   `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`          // Whether more results are available
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // Unique identifier (e.g., MusicBrainz ID)
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // Track/item title
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`                                                                               // Artist name
	Album         string                 `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`                                                                                 // Album name
	Score         float64                `protobuf:"fixed64,5,opt,name=score,proto3" json:"score,omitempty"`                                                                               // Match confidence score (0.0-1.0)
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *SearchResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchResult) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *SearchResult) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *SearchResult) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetSearchCapabilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSearchCapabilitiesRequest) Reset() {
	*x = GetSearchCapabilitiesRequest{}
	mi := &file_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSearchCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchCapabilitiesRequest) ProtoMessage() {}

func (x *GetSearchCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetSearchCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

type GetSearchCapabilitiesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SupportedFields    []string               `protobuf:"bytes,1,rep,name=supported_fields,json=supportedFields,proto3" json:"supported_fields,omitempty"`           // Fields that can be searched (title, artist, album, etc.)
	SupportsPagination bool                   `protobuf:"varint,2,opt,name=supports_pagination,json=supportsPagination,proto3" json:"supports_pagination,omitempty"` // Whether pagination is supported
	MaxResults         uint32                 `protobuf:"varint,3,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`                         // Maximum results per search
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSearchCapabilitiesResponse) Reset() {
	*x = GetSearchCapabilitiesResponse{}
	mi := &file_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSearchCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchCapabilitiesResponse) ProtoMessage() {}

func (x *GetSearchCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetSearchCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *GetSearchCapabilitiesResponse) GetSupportedFields() []string {
	if x != nil {
		return x.SupportedFields
	}
	return nil
}

func (x *GetSearchCapabilitiesResponse) GetSupportsPagination() bool {
	if x != nil {
		return x.SupportsPagination
	}
	return false
}

func (x *GetSearchCapabilitiesResponse) GetMaxResults() uint32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

// Core plugin interface messages
type InitializeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *PluginContext         `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *InitializeRequest) GetContext() *PluginContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type InitializeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *InitializeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitializeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{16}
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *StartResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{18}
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_plugin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *StopResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type InfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	mi := &file_plugin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{20}
}

type InfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *PluginInfo            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	mi := &file_plugin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *InfoResponse) GetInfo() *PluginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_plugin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{22}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_plugin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{23}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Metadata scraper messages
type CanHandleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanHandleRequest) Reset() {
	*x = CanHandleRequest{}
	mi := &file_plugin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanHandleRequest) ProtoMessage() {}

func (x *CanHandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanHandleRequest.ProtoReflect.Descriptor instead.
func (*CanHandleRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{24}
}

func (x *CanHandleRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CanHandleRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type CanHandleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CanHandle     bool                   `protobuf:"varint,1,opt,name=can_handle,json=canHandle,proto3" json:"can_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanHandleResponse) Reset() {
	*x = CanHandleResponse{}
	mi := &file_plugin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanHandleResponse) ProtoMessage() {}

func (x *CanHandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanHandleResponse.ProtoReflect.Descriptor instead.
func (*CanHandleResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{25}
}

func (x *CanHandleResponse) GetCanHandle() bool {
	if x != nil {
		return x.CanHandle
	}
	return false
}

type ExtractMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractMetadataRequest) Reset() {
	*x = ExtractMetadataRequest{}
	mi := &file_plugin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractMetadataRequest) ProtoMessage() {}

func (x *ExtractMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractMetadataRequest.ProtoReflect.Descriptor instead.
func (*ExtractMetadataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{26}
}

func (x *ExtractMetadataRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ExtractMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      map[string]string      `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractMetadataResponse) Reset() {
	*x = ExtractMetadataResponse{}
	mi := &file_plugin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractMetadataResponse) ProtoMessage() {}

func (x *ExtractMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractMetadataResponse.ProtoReflect.Descriptor instead.
func (*ExtractMetadataResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{27}
}

func (x *ExtractMetadataResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExtractMetadataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetSupportedTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedTypesRequest) Reset() {
	*x = GetSupportedTypesRequest{}
	mi := &file_plugin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedTypesRequest) ProtoMessage() {}

func (x *GetSupportedTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedTypesRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedTypesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{28}
}

type GetSupportedTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         []string               `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedTypesResponse) Reset() {
	*x = GetSupportedTypesResponse{}
	mi := &file_plugin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedTypesResponse) ProtoMessage() {}

func (x *GetSupportedTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedTypesResponse.ProtoReflect.Descriptor instead.
func (*GetSupportedTypesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{29}
}

func (x *GetSupportedTypesResponse) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

// Scanner hook messages
type OnMediaFileScannedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaFileId   string                 `protobuf:"bytes,1,opt,name=media_file_id,json=mediaFileId,proto3" json:"media_file_id,omitempty"` // Changed from uint32 to string for UUID support
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnMediaFileScannedRequest) Reset() {
	*x = OnMediaFileScannedRequest{}
	mi := &file_plugin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnMediaFileScannedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnMediaFileScannedRequest) ProtoMessage() {}

func (x *OnMediaFileScannedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnMediaFileScannedRequest.ProtoReflect.Descriptor instead.
func (*OnMediaFileScannedRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{30}
}

func (x *OnMediaFileScannedRequest) GetMediaFileId() string {
	if x != nil {
		return x.MediaFileId
	}
	return ""
}

func (x *OnMediaFileScannedRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *OnMediaFileScannedRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type OnMediaFileScannedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnMediaFileScannedResponse) Reset() {
	*x = OnMediaFileScannedResponse{}
	mi := &file_plugin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnMediaFileScannedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnMediaFileScannedResponse) ProtoMessage() {}

func (x *OnMediaFileScannedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnMediaFileScannedResponse.ProtoReflect.Descriptor instead.
func (*OnMediaFileScannedResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{31}
}

type OnScanStartedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScanJobId     uint32                 `protobuf:"varint,1,opt,name=scan_job_id,json=scanJobId,proto3" json:"scan_job_id,omitempty"`
	LibraryId     uint32                 `protobuf:"varint,2,opt,name=library_id,json=libraryId,proto3" json:"library_id,omitempty"`
	LibraryPath   string                 `protobuf:"bytes,3,opt,name=library_path,json=libraryPath,proto3" json:"library_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnScanStartedRequest) Reset() {
	*x = OnScanStartedRequest{}
	mi := &file_plugin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnScanStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnScanStartedRequest) ProtoMessage() {}

func (x *OnScanStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnScanStartedRequest.ProtoReflect.Descriptor instead.
func (*OnScanStartedRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{32}
}

func (x *OnScanStartedRequest) GetScanJobId() uint32 {
	if x != nil {
		return x.ScanJobId
	}
	return 0
}

func (x *OnScanStartedRequest) GetLibraryId() uint32 {
	if x != nil {
		return x.LibraryId
	}
	return 0
}

func (x *OnScanStartedRequest) GetLibraryPath() string {
	if x != nil {
		return x.LibraryPath
	}
	return ""
}

type OnScanStartedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnScanStartedResponse) Reset() {
	*x = OnScanStartedResponse{}
	mi := &file_plugin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnScanStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnScanStartedResponse) ProtoMessage() {}

func (x *OnScanStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnScanStartedResponse.ProtoReflect.Descriptor instead.
func (*OnScanStartedResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{33}
}

type OnScanCompletedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScanJobId     uint32                 `protobuf:"varint,1,opt,name=scan_job_id,json=scanJobId,proto3" json:"scan_job_id,omitempty"`
	LibraryId     uint32                 `protobuf:"varint,2,opt,name=library_id,json=libraryId,proto3" json:"library_id,omitempty"`
	Stats         map[string]string      `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnScanCompletedRequest) Reset() {
	*x = OnScanCompletedRequest{}
	mi := &file_plugin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnScanCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnScanCompletedRequest) ProtoMessage() {}

func (x *OnScanCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnScanCompletedRequest.ProtoReflect.Descriptor instead.
func (*OnScanCompletedRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{34}
}

func (x *OnScanCompletedRequest) GetScanJobId() uint32 {
	if x != nil {
		return x.ScanJobId
	}
	return 0
}

func (x *OnScanCompletedRequest) GetLibraryId() uint32 {
	if x != nil {
		return x.LibraryId
	}
	return 0
}

func (x *OnScanCompletedRequest) GetStats() map[string]string {
	if x != nil {
		return x.Stats
	}
	return nil
}

type OnScanCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnScanCompletedResponse) Reset() {
	*x = OnScanCompletedResponse{}
	mi := &file_plugin_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnScanCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnScanCompletedResponse) ProtoMessage() {}

func (x *OnScanCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnScanCompletedResponse.ProtoReflect.Descriptor instead.
func (*OnScanCompletedResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{35}
}

// Database messages
type GetModelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelsRequest) Reset() {
	*x = GetModelsRequest{}
	mi := &file_plugin_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelsRequest) ProtoMessage() {}

func (x *GetModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelsRequest.ProtoReflect.Descriptor instead.
func (*GetModelsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{36}
}

type GetModelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelNames    []string               `protobuf:"bytes,1,rep,name=model_names,json=modelNames,proto3" json:"model_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModelsResponse) Reset() {
	*x = GetModelsResponse{}
	mi := &file_plugin_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelsResponse) ProtoMessage() {}

func (x *GetModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelsResponse.ProtoReflect.Descriptor instead.
func (*GetModelsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{37}
}

func (x *GetModelsResponse) GetModelNames() []string {
	if x != nil {
		return x.ModelNames
	}
	return nil
}

type MigrateRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectionString string                 `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MigrateRequest) Reset() {
	*x = MigrateRequest{}
	mi := &file_plugin_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateRequest) ProtoMessage() {}

func (x *MigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateRequest.ProtoReflect.Descriptor instead.
func (*MigrateRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{38}
}

func (x *MigrateRequest) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

type MigrateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrateResponse) Reset() {
	*x = MigrateResponse{}
	mi := &file_plugin_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateResponse) ProtoMessage() {}

func (x *MigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateResponse.ProtoReflect.Descriptor instead.
func (*MigrateResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{39}
}

func (x *MigrateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MigrateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RollbackRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectionString string                 `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RollbackRequest) Reset() {
	*x = RollbackRequest{}
	mi := &file_plugin_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRequest) ProtoMessage() {}

func (x *RollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRequest.ProtoReflect.Descriptor instead.
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{40}
}

func (x *RollbackRequest) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

type RollbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	mi := &file_plugin_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{41}
}

func (x *RollbackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RollbackResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Admin page messages
type GetAdminPagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdminPagesRequest) Reset() {
	*x = GetAdminPagesRequest{}
	mi := &file_plugin_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminPagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminPagesRequest) ProtoMessage() {}

func (x *GetAdminPagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminPagesRequest.ProtoReflect.Descriptor instead.
func (*GetAdminPagesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{42}
}

type GetAdminPagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pages         []*AdminPageConfig     `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdminPagesResponse) Reset() {
	*x = GetAdminPagesResponse{}
	mi := &file_plugin_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminPagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminPagesResponse) ProtoMessage() {}

func (x *GetAdminPagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminPagesResponse.ProtoReflect.Descriptor instead.
func (*GetAdminPagesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{43}
}

func (x *GetAdminPagesResponse) GetPages() []*AdminPageConfig {
	if x != nil {
		return x.Pages
	}
	return nil
}

type RegisterRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BasePath      string                 `protobuf:"bytes,1,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRoutesRequest) Reset() {
	*x = RegisterRoutesRequest{}
	mi := &file_plugin_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRoutesRequest) ProtoMessage() {}

func (x *RegisterRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRoutesRequest.ProtoReflect.Descriptor instead.
func (*RegisterRoutesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{44}
}

func (x *RegisterRoutesRequest) GetBasePath() string {
	if x != nil {
		return x.BasePath
	}
	return ""
}

type RegisterRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRoutesResponse) Reset() {
	*x = RegisterRoutesResponse{}
	mi := &file_plugin_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRoutesResponse) ProtoMessage() {}

func (x *RegisterRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRoutesResponse.ProtoReflect.Descriptor instead.
func (*RegisterRoutesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{45}
}

func (x *RegisterRoutesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterRoutesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Common data structures
type PluginContext struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PluginId        string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Config          map[string]string      `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LogLevel        string                 `protobuf:"bytes,3,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	DatabaseUrl     string                 `protobuf:"bytes,4,opt,name=database_url,json=databaseUrl,proto3" json:"database_url,omitempty"`
	BasePath        string                 `protobuf:"bytes,5,opt,name=base_path,json=basePath,proto3" json:"base_path,omitempty"`
	HostServiceAddr string                 `protobuf:"bytes,6,opt,name=host_service_addr,json=hostServiceAddr,proto3" json:"host_service_addr,omitempty"` // Address of host's gRPC server for bidirectional communication
	PluginBasePath  string                 `protobuf:"bytes,7,opt,name=plugin_base_path,json=pluginBasePath,proto3" json:"plugin_base_path,omitempty"`    // Plugin-specific base path for plugin files and data
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PluginContext) Reset() {
	*x = PluginContext{}
	mi := &file_plugin_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginContext) ProtoMessage() {}

func (x *PluginContext) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginContext.ProtoReflect.Descriptor instead.
func (*PluginContext) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{46}
}

func (x *PluginContext) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *PluginContext) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PluginContext) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *PluginContext) GetDatabaseUrl() string {
	if x != nil {
		return x.DatabaseUrl
	}
	return ""
}

func (x *PluginContext) GetBasePath() string {
	if x != nil {
		return x.BasePath
	}
	return ""
}

func (x *PluginContext) GetHostServiceAddr() string {
	if x != nil {
		return x.HostServiceAddr
	}
	return ""
}

func (x *PluginContext) GetPluginBasePath() string {
	if x != nil {
		return x.PluginBasePath
	}
	return ""
}

type PluginInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Author        string                 `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Website       string                 `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	Repository    string                 `protobuf:"bytes,7,opt,name=repository,proto3" json:"repository,omitempty"`
	License       string                 `protobuf:"bytes,8,opt,name=license,proto3" json:"license,omitempty"`
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Tags          []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Status        string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	InstallPath   string                 `protobuf:"bytes,12,opt,name=install_path,json=installPath,proto3" json:"install_path,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	mi := &file_plugin_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{47}
}

func (x *PluginInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PluginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PluginInfo) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *PluginInfo) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *PluginInfo) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *PluginInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PluginInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginInfo) GetInstallPath() string {
	if x != nil {
		return x.InstallPath
	}
	return ""
}

func (x *PluginInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PluginInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AdminPageConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Icon          string                 `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminPageConfig) Reset() {
	*x = AdminPageConfig{}
	mi := &file_plugin_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminPageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPageConfig) ProtoMessage() {}

func (x *AdminPageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPageConfig.ProtoReflect.Descriptor instead.
func (*AdminPageConfig) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{48}
}

func (x *AdminPageConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminPageConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminPageConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AdminPageConfig) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AdminPageConfig) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AdminPageConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdminPageConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Provider info messages
type GetProviderInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProviderInfoRequest) Reset() {
	*x = GetProviderInfoRequest{}
	mi := &file_plugin_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProviderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderInfoRequest) ProtoMessage() {}

func (x *GetProviderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderInfoRequest.ProtoReflect.Descriptor instead.
func (*GetProviderInfoRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{49}
}

type GetProviderInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ProviderInfo          `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProviderInfoResponse) Reset() {
	*x = GetProviderInfoResponse{}
	mi := &file_plugin_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProviderInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderInfoResponse) ProtoMessage() {}

func (x *GetProviderInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderInfoResponse.ProtoReflect.Descriptor instead.
func (*GetProviderInfoResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{50}
}

func (x *GetProviderInfoResponse) GetInfo() *ProviderInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetProviderInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ProviderInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Priority      int32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,4,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderInfo) Reset() {
	*x = ProviderInfo{}
	mi := &file_plugin_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderInfo) ProtoMessage() {}

func (x *ProviderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderInfo.ProtoReflect.Descriptor instead.
func (*ProviderInfo) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{51}
}

func (x *ProviderInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProviderInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProviderInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ProviderInfo) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// Capabilities messages
type GetSupportedFormatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedFormatsRequest) Reset() {
	*x = GetSupportedFormatsRequest{}
	mi := &file_plugin_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedFormatsRequest) ProtoMessage() {}

func (x *GetSupportedFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedFormatsRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedFormatsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{52}
}

type GetSupportedFormatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Formats       []*ContainerFormat     `protobuf:"bytes,1,rep,name=formats,proto3" json:"formats,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedFormatsResponse) Reset() {
	*x = GetSupportedFormatsResponse{}
	mi := &file_plugin_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedFormatsResponse) ProtoMessage() {}

func (x *GetSupportedFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedFormatsResponse.ProtoReflect.Descriptor instead.
func (*GetSupportedFormatsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{53}
}

func (x *GetSupportedFormatsResponse) GetFormats() []*ContainerFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *GetSupportedFormatsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ContainerFormat struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Extensions      []string               `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	SupportedCodecs []string               `protobuf:"bytes,4,rep,name=supported_codecs,json=supportedCodecs,proto3" json:"supported_codecs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ContainerFormat) Reset() {
	*x = ContainerFormat{}
	mi := &file_plugin_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerFormat) ProtoMessage() {}

func (x *ContainerFormat) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerFormat.ProtoReflect.Descriptor instead.
func (*ContainerFormat) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{54}
}

func (x *ContainerFormat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerFormat) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ContainerFormat) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *ContainerFormat) GetSupportedCodecs() []string {
	if x != nil {
		return x.SupportedCodecs
	}
	return nil
}

type GetHardwareAcceleratorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardwareAcceleratorsRequest) Reset() {
	*x = GetHardwareAcceleratorsRequest{}
	mi := &file_plugin_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardwareAcceleratorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardwareAcceleratorsRequest) ProtoMessage() {}

func (x *GetHardwareAcceleratorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardwareAcceleratorsRequest.ProtoReflect.Descriptor instead.
func (*GetHardwareAcceleratorsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{55}
}

type GetHardwareAcceleratorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accelerators  []*HardwareAccelerator `protobuf:"bytes,1,rep,name=accelerators,proto3" json:"accelerators,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardwareAcceleratorsResponse) Reset() {
	*x = GetHardwareAcceleratorsResponse{}
	mi := &file_plugin_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardwareAcceleratorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardwareAcceleratorsResponse) ProtoMessage() {}

func (x *GetHardwareAcceleratorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardwareAcceleratorsResponse.ProtoReflect.Descriptor instead.
func (*GetHardwareAcceleratorsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{56}
}

func (x *GetHardwareAcceleratorsResponse) GetAccelerators() []*HardwareAccelerator {
	if x != nil {
		return x.Accelerators
	}
	return nil
}

func (x *GetHardwareAcceleratorsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type HardwareAccelerator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DevicePath    string                 `protobuf:"bytes,3,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	Available     bool                   `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HardwareAccelerator) Reset() {
	*x = HardwareAccelerator{}
	mi := &file_plugin_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HardwareAccelerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareAccelerator) ProtoMessage() {}

func (x *HardwareAccelerator) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareAccelerator.ProtoReflect.Descriptor instead.
func (*HardwareAccelerator) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{57}
}

func (x *HardwareAccelerator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HardwareAccelerator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HardwareAccelerator) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *HardwareAccelerator) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type GetQualityPresetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQualityPresetsRequest) Reset() {
	*x = GetQualityPresetsRequest{}
	mi := &file_plugin_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQualityPresetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQualityPresetsRequest) ProtoMessage() {}

func (x *GetQualityPresetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQualityPresetsRequest.ProtoReflect.Descriptor instead.
func (*GetQualityPresetsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{58}
}

type GetQualityPresetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Presets       []*QualityPreset       `protobuf:"bytes,1,rep,name=presets,proto3" json:"presets,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQualityPresetsResponse) Reset() {
	*x = GetQualityPresetsResponse{}
	mi := &file_plugin_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQualityPresetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQualityPresetsResponse) ProtoMessage() {}

func (x *GetQualityPresetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQualityPresetsResponse.ProtoReflect.Descriptor instead.
func (*GetQualityPresetsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{59}
}

func (x *GetQualityPresetsResponse) GetPresets() []*QualityPreset {
	if x != nil {
		return x.Presets
	}
	return nil
}

func (x *GetQualityPresetsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type QualityPreset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Quality       int32                  `protobuf:"varint,3,opt,name=quality,proto3" json:"quality,omitempty"` // 0-100
	Details       string                 `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QualityPreset) Reset() {
	*x = QualityPreset{}
	mi := &file_plugin_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityPreset) ProtoMessage() {}

func (x *QualityPreset) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityPreset.ProtoReflect.Descriptor instead.
func (*QualityPreset) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{60}
}

func (x *QualityPreset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QualityPreset) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QualityPreset) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *QualityPreset) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// Transcoding messages
type StartTranscodeProviderRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Request       *TranscodeProviderRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTranscodeProviderRequest) Reset() {
	*x = StartTranscodeProviderRequest{}
	mi := &file_plugin_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTranscodeProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTranscodeProviderRequest) ProtoMessage() {}

func (x *StartTranscodeProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTranscodeProviderRequest.ProtoReflect.Descriptor instead.
func (*StartTranscodeProviderRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{61}
}

func (x *StartTranscodeProviderRequest) GetRequest() *TranscodeProviderRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StartTranscodeProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *TranscodeHandle       `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTranscodeProviderResponse) Reset() {
	*x = StartTranscodeProviderResponse{}
	mi := &file_plugin_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTranscodeProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTranscodeProviderResponse) ProtoMessage() {}

func (x *StartTranscodeProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTranscodeProviderResponse.ProtoReflect.Descriptor instead.
func (*StartTranscodeProviderResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{62}
}

func (x *StartTranscodeProviderResponse) GetHandle() *TranscodeHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *StartTranscodeProviderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TranscodeProviderRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	InputPath string                 `protobuf:"bytes,2,opt,name=input_path,json=inputPath,proto3" json:"input_path,omitempty"`
	OutputDir string                 `protobuf:"bytes,3,opt,name=output_dir,json=outputDir,proto3" json:"output_dir,omitempty"`
	// Generic settings
	Quality       int32  `protobuf:"varint,4,opt,name=quality,proto3" json:"quality,omitempty"`                                 // 0-100 quality scale
	SpeedPriority string `protobuf:"bytes,5,opt,name=speed_priority,json=speedPriority,proto3" json:"speed_priority,omitempty"` // "fastest", "balanced", "quality"
	Container     string `protobuf:"bytes,6,opt,name=container,proto3" json:"container,omitempty"`                              // "mp4", "mkv", "dash", "hls"
	// Video settings
	VideoCodec string `protobuf:"bytes,7,opt,name=video_codec,json=videoCodec,proto3" json:"video_codec,omitempty"` // "h264", "h265", "vp8", "vp9", "av1"
	Resolution string `protobuf:"bytes,8,opt,name=resolution,proto3" json:"resolution,omitempty"`                   // "1080p", "720p", "480p", "keep"
	// Audio settings
	AudioCodec       string `protobuf:"bytes,9,opt,name=audio_codec,json=audioCodec,proto3" json:"audio_codec,omitempty"` // "aac", "opus", "mp3", "copy"
	AudioBitrateKbps int32  `protobuf:"varint,10,opt,name=audio_bitrate_kbps,json=audioBitrateKbps,proto3" json:"audio_bitrate_kbps,omitempty"`
	// Hardware preferences
	PreferHardware bool   `protobuf:"varint,11,opt,name=prefer_hardware,json=preferHardware,proto3" json:"prefer_hardware,omitempty"`
	HardwareType   string `protobuf:"bytes,12,opt,name=hardware_type,json=hardwareType,proto3" json:"hardware_type,omitempty"` // "auto", "nvenc", "vaapi", "qsv", "videotoolbox"
	// Additional options
	ExtraOptions  map[string]string `protobuf:"bytes,13,rep,name=extra_options,json=extraOptions,proto3" json:"extra_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscodeProviderRequest) Reset() {
	*x = TranscodeProviderRequest{}
	mi := &file_plugin_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscodeProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeProviderRequest) ProtoMessage() {}

func (x *TranscodeProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodeProviderRequest.ProtoReflect.Descriptor instead.
func (*TranscodeProviderRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{63}
}

func (x *TranscodeProviderRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TranscodeProviderRequest) GetInputPath() string {
	if x != nil {
		return x.InputPath
	}
	return ""
}

func (x *TranscodeProviderRequest) GetOutputDir() string {
	if x != nil {
		return x.OutputDir
	}
	return ""
}

func (x *TranscodeProviderRequest) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *TranscodeProviderRequest) GetSpeedPriority() string {
	if x != nil {
		return x.SpeedPriority
	}
	return ""
}

func (x *TranscodeProviderRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *TranscodeProviderRequest) GetVideoCodec() string {
	if x != nil {
		return x.VideoCodec
	}
	return ""
}

func (x *TranscodeProviderRequest) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

func (x *TranscodeProviderRequest) GetAudioCodec() string {
	if x != nil {
		return x.AudioCodec
	}
	return ""
}

func (x *TranscodeProviderRequest) GetAudioBitrateKbps() int32 {
	if x != nil {
		return x.AudioBitrateKbps
	}
	return 0
}

func (x *TranscodeProviderRequest) GetPreferHardware() bool {
	if x != nil {
		return x.PreferHardware
	}
	return false
}

func (x *TranscodeProviderRequest) GetHardwareType() string {
	if x != nil {
		return x.HardwareType
	}
	return ""
}

func (x *TranscodeProviderRequest) GetExtraOptions() map[string]string {
	if x != nil {
		return x.ExtraOptions
	}
	return nil
}

type TranscodeHandle struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Provider  string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	StartTime int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Directory string                 `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	// Private data stored as JSON
	PrivateData   string `protobuf:"bytes,5,opt,name=private_data,json=privateData,proto3" json:"private_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscodeHandle) Reset() {
	*x = TranscodeHandle{}
	mi := &file_plugin_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscodeHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeHandle) ProtoMessage() {}

func (x *TranscodeHandle) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodeHandle.ProtoReflect.Descriptor instead.
func (*TranscodeHandle) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{64}
}

func (x *TranscodeHandle) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TranscodeHandle) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TranscodeHandle) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TranscodeHandle) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *TranscodeHandle) GetPrivateData() string {
	if x != nil {
		return x.PrivateData
	}
	return ""
}

type GetProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *TranscodeHandle       `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgressRequest) Reset() {
	*x = GetProgressRequest{}
	mi := &file_plugin_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressRequest) ProtoMessage() {}

func (x *GetProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressRequest.ProtoReflect.Descriptor instead.
func (*GetProgressRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{65}
}

func (x *GetProgressRequest) GetHandle() *TranscodeHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type GetProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *TranscodingProgress   `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProgressResponse) Reset() {
	*x = GetProgressResponse{}
	mi := &file_plugin_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressResponse) ProtoMessage() {}

func (x *GetProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressResponse.ProtoReflect.Descriptor instead.
func (*GetProgressResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{66}
}

func (x *GetProgressResponse) GetProgress() *TranscodingProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetProgressResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TranscodingProgress struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PercentComplete int32                  `protobuf:"varint,1,opt,name=percent_complete,json=percentComplete,proto3" json:"percent_complete,omitempty"`
	TimeElapsed     int64                  `protobuf:"varint,2,opt,name=time_elapsed,json=timeElapsed,proto3" json:"time_elapsed,omitempty"`       // nanoseconds
	TimeRemaining   int64                  `protobuf:"varint,3,opt,name=time_remaining,json=timeRemaining,proto3" json:"time_remaining,omitempty"` // nanoseconds
	CurrentSpeed    float64                `protobuf:"fixed64,4,opt,name=current_speed,json=currentSpeed,proto3" json:"current_speed,omitempty"`   // encoding speed multiplier
	BytesRead       int64                  `protobuf:"varint,5,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	BytesWritten    int64                  `protobuf:"varint,6,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	CurrentBitrate  float64                `protobuf:"fixed64,7,opt,name=current_bitrate,json=currentBitrate,proto3" json:"current_bitrate,omitempty"`
	CurrentFrame    int32                  `protobuf:"varint,8,opt,name=current_frame,json=currentFrame,proto3" json:"current_frame,omitempty"`
	CurrentFps      float64                `protobuf:"fixed64,9,opt,name=current_fps,json=currentFps,proto3" json:"current_fps,omitempty"`
	StatusMessage   string                 `protobuf:"bytes,10,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TranscodingProgress) Reset() {
	*x = TranscodingProgress{}
	mi := &file_plugin_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscodingProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodingProgress) ProtoMessage() {}

func (x *TranscodingProgress) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodingProgress.ProtoReflect.Descriptor instead.
func (*TranscodingProgress) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{67}
}

func (x *TranscodingProgress) GetPercentComplete() int32 {
	if x != nil {
		return x.PercentComplete
	}
	return 0
}

func (x *TranscodingProgress) GetTimeElapsed() int64 {
	if x != nil {
		return x.TimeElapsed
	}
	return 0
}

func (x *TranscodingProgress) GetTimeRemaining() int64 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

func (x *TranscodingProgress) GetCurrentSpeed() float64 {
	if x != nil {
		return x.CurrentSpeed
	}
	return 0
}

func (x *TranscodingProgress) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

func (x *TranscodingProgress) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *TranscodingProgress) GetCurrentBitrate() float64 {
	if x != nil {
		return x.CurrentBitrate
	}
	return 0
}

func (x *TranscodingProgress) GetCurrentFrame() int32 {
	if x != nil {
		return x.CurrentFrame
	}
	return 0
}

func (x *TranscodingProgress) GetCurrentFps() float64 {
	if x != nil {
		return x.CurrentFps
	}
	return 0
}

func (x *TranscodingProgress) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type StopTranscodeProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *TranscodeHandle       `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopTranscodeProviderRequest) Reset() {
	*x = StopTranscodeProviderRequest{}
	mi := &file_plugin_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopTranscodeProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTranscodeProviderRequest) ProtoMessage() {}

func (x *StopTranscodeProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTranscodeProviderRequest.ProtoReflect.Descriptor instead.
func (*StopTranscodeProviderRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{68}
}

func (x *StopTranscodeProviderRequest) GetHandle() *TranscodeHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type StopTranscodeProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopTranscodeProviderResponse) Reset() {
	*x = StopTranscodeProviderResponse{}
	mi := &file_plugin_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopTranscodeProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTranscodeProviderResponse) ProtoMessage() {}

func (x *StopTranscodeProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTranscodeProviderResponse.ProtoReflect.Descriptor instead.
func (*StopTranscodeProviderResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{69}
}

func (x *StopTranscodeProviderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopTranscodeProviderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Streaming messages
type StartStreamRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Request       *TranscodeProviderRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartStreamRequest) Reset() {
	*x = StartStreamRequest{}
	mi := &file_plugin_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamRequest) ProtoMessage() {}

func (x *StartStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamRequest.ProtoReflect.Descriptor instead.
func (*StartStreamRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{70}
}

func (x *StartStreamRequest) GetRequest() *TranscodeProviderRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StartStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *StreamHandle          `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartStreamResponse) Reset() {
	*x = StartStreamResponse{}
	mi := &file_plugin_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamResponse) ProtoMessage() {}

func (x *StartStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamResponse.ProtoReflect.Descriptor instead.
func (*StartStreamResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{71}
}

func (x *StartStreamResponse) GetHandle() *StreamHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

func (x *StartStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StreamHandle struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	SessionId   string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Provider    string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	StartTime   int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ContentType string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Codec       string                 `protobuf:"bytes,5,opt,name=codec,proto3" json:"codec,omitempty"`
	// Private data stored as JSON
	PrivateData   string `protobuf:"bytes,6,opt,name=private_data,json=privateData,proto3" json:"private_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamHandle) Reset() {
	*x = StreamHandle{}
	mi := &file_plugin_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHandle) ProtoMessage() {}

func (x *StreamHandle) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHandle.ProtoReflect.Descriptor instead.
func (*StreamHandle) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{72}
}

func (x *StreamHandle) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StreamHandle) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *StreamHandle) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *StreamHandle) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *StreamHandle) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *StreamHandle) GetPrivateData() string {
	if x != nil {
		return x.PrivateData
	}
	return ""
}

type GetStreamDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *StreamHandle          `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamDataRequest) Reset() {
	*x = GetStreamDataRequest{}
	mi := &file_plugin_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamDataRequest) ProtoMessage() {}

func (x *GetStreamDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamDataRequest.ProtoReflect.Descriptor instead.
func (*GetStreamDataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{73}
}

func (x *GetStreamDataRequest) GetHandle() *StreamHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type StreamDataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Eof           bool                   `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDataChunk) Reset() {
	*x = StreamDataChunk{}
	mi := &file_plugin_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataChunk) ProtoMessage() {}

func (x *StreamDataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataChunk.ProtoReflect.Descriptor instead.
func (*StreamDataChunk) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{74}
}

func (x *StreamDataChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamDataChunk) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

func (x *StreamDataChunk) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handle        *StreamHandle          `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopStreamRequest) Reset() {
	*x = StopStreamRequest{}
	mi := &file_plugin_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopStreamRequest) ProtoMessage() {}

func (x *StopStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopStreamRequest.ProtoReflect.Descriptor instead.
func (*StopStreamRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{75}
}

func (x *StopStreamRequest) GetHandle() *StreamHandle {
	if x != nil {
		return x.Handle
	}
	return nil
}

type StopStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopStreamResponse) Reset() {
	*x = StopStreamResponse{}
	mi := &file_plugin_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopStreamResponse) ProtoMessage() {}

func (x *StopStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopStreamResponse.ProtoReflect.Descriptor instead.
func (*StopStreamResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{76}
}

func (x *StopStreamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Dashboard service messages
type GetDashboardSectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardSectionsRequest) Reset() {
	*x = GetDashboardSectionsRequest{}
	mi := &file_plugin_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardSectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardSectionsRequest) ProtoMessage() {}

func (x *GetDashboardSectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardSectionsRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardSectionsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{77}
}

type GetDashboardSectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sections      []*DashboardSection    `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardSectionsResponse) Reset() {
	*x = GetDashboardSectionsResponse{}
	mi := &file_plugin_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardSectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardSectionsResponse) ProtoMessage() {}

func (x *GetDashboardSectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardSectionsResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardSectionsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{78}
}

func (x *GetDashboardSectionsResponse) GetSections() []*DashboardSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *GetDashboardSectionsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetMainDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SectionId     string                 `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMainDataRequest) Reset() {
	*x = GetMainDataRequest{}
	mi := &file_plugin_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainDataRequest) ProtoMessage() {}

func (x *GetMainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainDataRequest.ProtoReflect.Descriptor instead.
func (*GetMainDataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{79}
}

func (x *GetMainDataRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

type GetMainDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataJson      string                 `protobuf:"bytes,1,opt,name=data_json,json=dataJson,proto3" json:"data_json,omitempty"` // JSON-encoded data
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMainDataResponse) Reset() {
	*x = GetMainDataResponse{}
	mi := &file_plugin_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainDataResponse) ProtoMessage() {}

func (x *GetMainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainDataResponse.ProtoReflect.Descriptor instead.
func (*GetMainDataResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{80}
}

func (x *GetMainDataResponse) GetDataJson() string {
	if x != nil {
		return x.DataJson
	}
	return ""
}

func (x *GetMainDataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNerdDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SectionId     string                 `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNerdDataRequest) Reset() {
	*x = GetNerdDataRequest{}
	mi := &file_plugin_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNerdDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNerdDataRequest) ProtoMessage() {}

func (x *GetNerdDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNerdDataRequest.ProtoReflect.Descriptor instead.
func (*GetNerdDataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{81}
}

func (x *GetNerdDataRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

type GetNerdDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataJson      string                 `protobuf:"bytes,1,opt,name=data_json,json=dataJson,proto3" json:"data_json,omitempty"` // JSON-encoded data
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNerdDataResponse) Reset() {
	*x = GetNerdDataResponse{}
	mi := &file_plugin_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNerdDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNerdDataResponse) ProtoMessage() {}

func (x *GetNerdDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNerdDataResponse.ProtoReflect.Descriptor instead.
func (*GetNerdDataResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{82}
}

func (x *GetNerdDataResponse) GetDataJson() string {
	if x != nil {
		return x.DataJson
	}
	return ""
}

func (x *GetNerdDataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SectionId     string                 `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	StartTime     int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Unix timestamp
	EndTime       int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Unix timestamp
	Step          string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`                             // Time step (e.g., "1m", "5m", "1h")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_plugin_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{83}
}

func (x *GetMetricsRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *GetMetricsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetMetricsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetMetricsRequest) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type GetMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MetricPoint         `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	mi := &file_plugin_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{84}
}

func (x *GetMetricsResponse) GetPoints() []*MetricPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *GetMetricsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DashboardSection struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PluginId      string                  `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Type          string                  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Title         string                  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Icon          string                  `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Priority      int32                   `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	Config        *DashboardSectionConfig `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	Manifest      *DashboardManifest      `protobuf:"bytes,9,opt,name=manifest,proto3" json:"manifest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardSection) Reset() {
	*x = DashboardSection{}
	mi := &file_plugin_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSection) ProtoMessage() {}

func (x *DashboardSection) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSection.ProtoReflect.Descriptor instead.
func (*DashboardSection) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{85}
}

func (x *DashboardSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DashboardSection) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *DashboardSection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DashboardSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DashboardSection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DashboardSection) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DashboardSection) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DashboardSection) GetConfig() *DashboardSectionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DashboardSection) GetManifest() *DashboardManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type DashboardSectionConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RefreshInterval  int32                  `protobuf:"varint,1,opt,name=refresh_interval,json=refreshInterval,proto3" json:"refresh_interval,omitempty"`
	SupportsRealtime bool                   `protobuf:"varint,2,opt,name=supports_realtime,json=supportsRealtime,proto3" json:"supports_realtime,omitempty"`
	HasNerdPanel     bool                   `protobuf:"varint,3,opt,name=has_nerd_panel,json=hasNerdPanel,proto3" json:"has_nerd_panel,omitempty"`
	RequiresAuth     bool                   `protobuf:"varint,4,opt,name=requires_auth,json=requiresAuth,proto3" json:"requires_auth,omitempty"`
	MinRefreshRate   int32                  `protobuf:"varint,5,opt,name=min_refresh_rate,json=minRefreshRate,proto3" json:"min_refresh_rate,omitempty"`
	MaxDataPoints    int32                  `protobuf:"varint,6,opt,name=max_data_points,json=maxDataPoints,proto3" json:"max_data_points,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DashboardSectionConfig) Reset() {
	*x = DashboardSectionConfig{}
	mi := &file_plugin_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardSectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSectionConfig) ProtoMessage() {}

func (x *DashboardSectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSectionConfig.ProtoReflect.Descriptor instead.
func (*DashboardSectionConfig) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{86}
}

func (x *DashboardSectionConfig) GetRefreshInterval() int32 {
	if x != nil {
		return x.RefreshInterval
	}
	return 0
}

func (x *DashboardSectionConfig) GetSupportsRealtime() bool {
	if x != nil {
		return x.SupportsRealtime
	}
	return false
}

func (x *DashboardSectionConfig) GetHasNerdPanel() bool {
	if x != nil {
		return x.HasNerdPanel
	}
	return false
}

func (x *DashboardSectionConfig) GetRequiresAuth() bool {
	if x != nil {
		return x.RequiresAuth
	}
	return false
}

func (x *DashboardSectionConfig) GetMinRefreshRate() int32 {
	if x != nil {
		return x.MinRefreshRate
	}
	return 0
}

func (x *DashboardSectionConfig) GetMaxDataPoints() int32 {
	if x != nil {
		return x.MaxDataPoints
	}
	return 0
}

type DashboardManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComponentType string                 `protobuf:"bytes,1,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	Actions       []*DashboardAction     `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	UiSchema      map[string]string      `protobuf:"bytes,3,rep,name=ui_schema,json=uiSchema,proto3" json:"ui_schema,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Simplified as string map
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardManifest) Reset() {
	*x = DashboardManifest{}
	mi := &file_plugin_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardManifest) ProtoMessage() {}

func (x *DashboardManifest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardManifest.ProtoReflect.Descriptor instead.
func (*DashboardManifest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{87}
}

func (x *DashboardManifest) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *DashboardManifest) GetActions() []*DashboardAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *DashboardManifest) GetUiSchema() map[string]string {
	if x != nil {
		return x.UiSchema
	}
	return nil
}

type DashboardAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Style         string                 `protobuf:"bytes,4,opt,name=style,proto3" json:"style,omitempty"`
	Endpoint      string                 `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Method        string                 `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	Confirm       bool                   `protobuf:"varint,7,opt,name=confirm,proto3" json:"confirm,omitempty"`
	PayloadJson   string                 `protobuf:"bytes,8,opt,name=payload_json,json=payloadJson,proto3" json:"payload_json,omitempty"` // JSON-encoded payload
	Shortcut      string                 `protobuf:"bytes,9,opt,name=shortcut,proto3" json:"shortcut,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardAction) Reset() {
	*x = DashboardAction{}
	mi := &file_plugin_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardAction) ProtoMessage() {}

func (x *DashboardAction) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardAction.ProtoReflect.Descriptor instead.
func (*DashboardAction) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{88}
}

func (x *DashboardAction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DashboardAction) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DashboardAction) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DashboardAction) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *DashboardAction) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *DashboardAction) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DashboardAction) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

func (x *DashboardAction) GetPayloadJson() string {
	if x != nil {
		return x.PayloadJson
	}
	return ""
}

func (x *DashboardAction) GetShortcut() string {
	if x != nil {
		return x.Shortcut
	}
	return ""
}

type MetricPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MetadataJson  string                 `protobuf:"bytes,4,opt,name=metadata_json,json=metadataJson,proto3" json:"metadata_json,omitempty"` // JSON-encoded metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricPoint) Reset() {
	*x = MetricPoint{}
	mi := &file_plugin_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricPoint) ProtoMessage() {}

func (x *MetricPoint) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricPoint.ProtoReflect.Descriptor instead.
func (*MetricPoint) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{89}
}

func (x *MetricPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetricPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricPoint) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricPoint) GetMetadataJson() string {
	if x != nil {
		return x.MetadataJson
	}
	return ""
}

var File_plugin_proto protoreflect.FileDescriptor

const file_plugin_proto_rawDesc = "" +
	"\n" +
	"\fplugin.proto\x12\x06plugin\"X\n" +
	"\bAPIRoute\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\x1c\n" +
	"\x1aGetRegisteredRoutesRequest\"G\n" +
	"\x1bGetRegisteredRoutesResponse\x12(\n" +
	"\x06routes\x18\x01 \x03(\v2\x10.plugin.APIRouteR\x06routes\"\xf9\x02\n" +
	"\x10SaveAssetRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12\x1d\n" +
	"\n" +
	"asset_type\x18\x02 \x01(\tR\tassetType\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x18\n" +
	"\asubtype\x18\x04 \x01(\tR\asubtype\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x1b\n" +
	"\tmime_type\x18\x06 \x01(\tR\bmimeType\x12\x1d\n" +
	"\n" +
	"source_url\x18\a \x01(\tR\tsourceUrl\x12B\n" +
	"\bmetadata\x18\b \x03(\v2&.plugin.SaveAssetRequest.MetadataEntryR\bmetadata\x12\x1b\n" +
	"\tplugin_id\x18\t \x01(\tR\bpluginId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x01\n" +
	"\x11SaveAssetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x19\n" +
	"\basset_id\x18\x03 \x01(\rR\aassetId\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\tR\x04hash\x12#\n" +
	"\rrelative_path\x18\x05 \x01(\tR\frelativePath\"\xa1\x01\n" +
	"\x12AssetExistsRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12\x1d\n" +
	"\n" +
	"asset_type\x18\x02 \x01(\tR\tassetType\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x18\n" +
	"\asubtype\x18\x04 \x01(\tR\asubtype\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\tR\x04hash\"m\n" +
	"\x13AssetExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12\x19\n" +
	"\basset_id\x18\x02 \x01(\rR\aassetId\x12#\n" +
	"\rrelative_path\x18\x03 \x01(\tR\frelativePath\"/\n" +
	"\x12RemoveAssetRequest\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\rR\aassetId\"E\n" +
	"\x13RemoveAssetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xaf\x01\n" +
	"\rSearchRequest\x126\n" +
	"\x05query\x18\x01 \x03(\v2 .plugin.SearchRequest.QueryEntryR\x05query\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\rR\x06offset\x1a8\n" +
	"\n" +
	"QueryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\x0eSearchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12.\n" +
	"\aresults\x18\x03 \x03(\v2\x14.plugin.SearchResultR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\rR\n" +
	"totalCount\x12\x19\n" +
	"\bhas_more\x18\x05 \x01(\bR\ahasMore\"\xf5\x01\n" +
	"\fSearchResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x04 \x01(\tR\x05album\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x01R\x05score\x12>\n" +
	"\bmetadata\x18\x06 \x03(\v2\".plugin.SearchResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1e\n" +
	"\x1cGetSearchCapabilitiesRequest\"\x9c\x01\n" +
	"\x1dGetSearchCapabilitiesResponse\x12)\n" +
	"\x10supported_fields\x18\x01 \x03(\tR\x0fsupportedFields\x12/\n" +
	"\x13supports_pagination\x18\x02 \x01(\bR\x12supportsPagination\x12\x1f\n" +
	"\vmax_results\x18\x03 \x01(\rR\n" +
	"maxResults\"D\n" +
	"\x11InitializeRequest\x12/\n" +
	"\acontext\x18\x01 \x01(\v2\x15.plugin.PluginContextR\acontext\"D\n" +
	"\x12InitializeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x0e\n" +
	"\fStartRequest\"?\n" +
	"\rStartResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\r\n" +
	"\vStopRequest\">\n" +
	"\fStopResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\r\n" +
	"\vInfoRequest\"6\n" +
	"\fInfoResponse\x12&\n" +
	"\x04info\x18\x01 \x01(\v2\x12.plugin.PluginInfoR\x04info\"\x0f\n" +
	"\rHealthRequest\"@\n" +
	"\x0eHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"L\n" +
	"\x10CanHandleRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\"2\n" +
	"\x11CanHandleResponse\x12\x1d\n" +
	"\n" +
	"can_handle\x18\x01 \x01(\bR\tcanHandle\"5\n" +
	"\x16ExtractMetadataRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\"\xb7\x01\n" +
	"\x17ExtractMetadataResponse\x12I\n" +
	"\bmetadata\x18\x01 \x03(\v2-.plugin.ExtractMetadataResponse.MetadataEntryR\bmetadata\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1a\n" +
	"\x18GetSupportedTypesRequest\"1\n" +
	"\x19GetSupportedTypesResponse\x12\x14\n" +
	"\x05types\x18\x01 \x03(\tR\x05types\"\xe6\x01\n" +
	"\x19OnMediaFileScannedRequest\x12\"\n" +
	"\rmedia_file_id\x18\x01 \x01(\tR\vmediaFileId\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12K\n" +
	"\bmetadata\x18\x03 \x03(\v2/.plugin.OnMediaFileScannedRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1c\n" +
	"\x1aOnMediaFileScannedResponse\"x\n" +
	"\x14OnScanStartedRequest\x12\x1e\n" +
	"\vscan_job_id\x18\x01 \x01(\rR\tscanJobId\x12\x1d\n" +
	"\n" +
	"library_id\x18\x02 \x01(\rR\tlibraryId\x12!\n" +
	"\flibrary_path\x18\x03 \x01(\tR\vlibraryPath\"\x17\n" +
	"\x15OnScanStartedResponse\"\xd2\x01\n" +
	"\x16OnScanCompletedRequest\x12\x1e\n" +
	"\vscan_job_id\x18\x01 \x01(\rR\tscanJobId\x12\x1d\n" +
	"\n" +
	"library_id\x18\x02 \x01(\rR\tlibraryId\x12?\n" +
	"\x05stats\x18\x03 \x03(\v2).plugin.OnScanCompletedRequest.StatsEntryR\x05stats\x1a8\n" +
	"\n" +
	"StatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x19\n" +
	"\x17OnScanCompletedResponse\"\x12\n" +
	"\x10GetModelsRequest\"4\n" +
	"\x11GetModelsResponse\x12\x1f\n" +
	"\vmodel_names\x18\x01 \x03(\tR\n" +
	"modelNames\"=\n" +
	"\x0eMigrateRequest\x12+\n" +
	"\x11connection_string\x18\x01 \x01(\tR\x10connectionString\"A\n" +
	"\x0fMigrateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\">\n" +
	"\x0fRollbackRequest\x12+\n" +
	"\x11connection_string\x18\x01 \x01(\tR\x10connectionString\"B\n" +
	"\x10RollbackResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x16\n" +
	"\x14GetAdminPagesRequest\"F\n" +
	"\x15GetAdminPagesResponse\x12-\n" +
	"\x05pages\x18\x01 \x03(\v2\x17.plugin.AdminPageConfigR\x05pages\"4\n" +
	"\x15RegisterRoutesRequest\x12\x1b\n" +
	"\tbase_path\x18\x01 \x01(\tR\bbasePath\"H\n" +
	"\x16RegisterRoutesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xd5\x02\n" +
	"\rPluginContext\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\x129\n" +
	"\x06config\x18\x02 \x03(\v2!.plugin.PluginContext.ConfigEntryR\x06config\x12\x1b\n" +
	"\tlog_level\x18\x03 \x01(\tR\blogLevel\x12!\n" +
	"\fdatabase_url\x18\x04 \x01(\tR\vdatabaseUrl\x12\x1b\n" +
	"\tbase_path\x18\x05 \x01(\tR\bbasePath\x12*\n" +
	"\x11host_service_addr\x18\x06 \x01(\tR\x0fhostServiceAddr\x12(\n" +
	"\x10plugin_base_path\x18\a \x01(\tR\x0epluginBasePath\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf9\x02\n" +
	"\n" +
	"PluginInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06author\x18\x05 \x01(\tR\x06author\x12\x18\n" +
	"\awebsite\x18\x06 \x01(\tR\awebsite\x12\x1e\n" +
	"\n" +
	"repository\x18\a \x01(\tR\n" +
	"repository\x12\x18\n" +
	"\alicense\x18\b \x01(\tR\alicense\x12\x12\n" +
	"\x04type\x18\t \x01(\tR\x04type\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12!\n" +
	"\finstall_path\x18\f \x01(\tR\vinstallPath\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\x03R\tupdatedAt\"\xa1\x01\n" +
	"\x0fAdminPageConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\"\x18\n" +
	"\x16GetProviderInfoRequest\"Y\n" +
	"\x17GetProviderInfoResponse\x12(\n" +
	"\x04info\x18\x01 \x01(\v2\x14.plugin.ProviderInfoR\x04info\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xed\x01\n" +
	"\fProviderInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x05R\bpriority\x12J\n" +
	"\fcapabilities\x18\x04 \x03(\v2&.plugin.ProviderInfo.CapabilitiesEntryR\fcapabilities\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1c\n" +
	"\x1aGetSupportedFormatsRequest\"f\n" +
	"\x1bGetSupportedFormatsResponse\x121\n" +
	"\aformats\x18\x01 \x03(\v2\x17.plugin.ContainerFormatR\aformats\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x92\x01\n" +
	"\x0fContainerFormat\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"extensions\x18\x03 \x03(\tR\n" +
	"extensions\x12)\n" +
	"\x10supported_codecs\x18\x04 \x03(\tR\x0fsupportedCodecs\" \n" +
	"\x1eGetHardwareAcceleratorsRequest\"x\n" +
	"\x1fGetHardwareAcceleratorsResponse\x12?\n" +
	"\faccelerators\x18\x01 \x03(\v2\x1b.plugin.HardwareAcceleratorR\faccelerators\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"x\n" +
	"\x13HardwareAccelerator\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vdevice_path\x18\x03 \x01(\tR\n" +
	"devicePath\x12\x1c\n" +
	"\tavailable\x18\x04 \x01(\bR\tavailable\"\x1a\n" +
	"\x18GetQualityPresetsRequest\"b\n" +
	"\x19GetQualityPresetsResponse\x12/\n" +
	"\apresets\x18\x01 \x03(\v2\x15.plugin.QualityPresetR\apresets\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"y\n" +
	"\rQualityPreset\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x18\n" +
	"\aquality\x18\x03 \x01(\x05R\aquality\x12\x18\n" +
	"\adetails\x18\x04 \x01(\tR\adetails\"[\n" +
	"\x1dStartTranscodeProviderRequest\x12:\n" +
	"\arequest\x18\x01 \x01(\v2 .plugin.TranscodeProviderRequestR\arequest\"g\n" +
	"\x1eStartTranscodeProviderResponse\x12/\n" +
	"\x06handle\x18\x01 \x01(\v2\x17.plugin.TranscodeHandleR\x06handle\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xce\x04\n" +
	"\x18TranscodeProviderRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"input_path\x18\x02 \x01(\tR\tinputPath\x12\x1d\n" +
	"\n" +
	"output_dir\x18\x03 \x01(\tR\toutputDir\x12\x18\n" +
	"\aquality\x18\x04 \x01(\x05R\aquality\x12%\n" +
	"\x0espeed_priority\x18\x05 \x01(\tR\rspeedPriority\x12\x1c\n" +
	"\tcontainer\x18\x06 \x01(\tR\tcontainer\x12\x1f\n" +
	"\vvideo_codec\x18\a \x01(\tR\n" +
	"videoCodec\x12\x1e\n" +
	"\n" +
	"resolution\x18\b \x01(\tR\n" +
	"resolution\x12\x1f\n" +
	"\vaudio_codec\x18\t \x01(\tR\n" +
	"audioCodec\x12,\n" +
	"\x12audio_bitrate_kbps\x18\n" +
	" \x01(\x05R\x10audioBitrateKbps\x12'\n" +
	"\x0fprefer_hardware\x18\v \x01(\bR\x0epreferHardware\x12#\n" +
	"\rhardware_type\x18\f \x01(\tR\fhardwareType\x12W\n" +
	"\rextra_options\x18\r \x03(\v22.plugin.TranscodeProviderRequest.ExtraOptionsEntryR\fextraOptions\x1a?\n" +
	"\x11ExtraOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\x0fTranscodeHandle\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03R\tstartTime\x12\x1c\n" +
	"\tdirectory\x18\x04 \x01(\tR\tdirectory\x12!\n" +
	"\fprivate_data\x18\x05 \x01(\tR\vprivateData\"E\n" +
	"\x12GetProgressRequest\x12/\n" +
	"\x06handle\x18\x01 \x01(\v2\x17.plugin.TranscodeHandleR\x06handle\"d\n" +
	"\x13GetProgressResponse\x127\n" +
	"\bprogress\x18\x01 \x01(\v2\x1b.plugin.TranscodingProgressR\bprogress\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x89\x03\n" +
	"\x13TranscodingProgress\x12)\n" +
	"\x10percent_complete\x18\x01 \x01(\x05R\x0fpercentComplete\x12!\n" +
	"\ftime_elapsed\x18\x02 \x01(\x03R\vtimeElapsed\x12%\n" +
	"\x0etime_remaining\x18\x03 \x01(\x03R\rtimeRemaining\x12#\n" +
	"\rcurrent_speed\x18\x04 \x01(\x01R\fcurrentSpeed\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\x05 \x01(\x03R\tbytesRead\x12#\n" +
	"\rbytes_written\x18\x06 \x01(\x03R\fbytesWritten\x12'\n" +
	"\x0fcurrent_bitrate\x18\a \x01(\x01R\x0ecurrentBitrate\x12#\n" +
	"\rcurrent_frame\x18\b \x01(\x05R\fcurrentFrame\x12\x1f\n" +
	"\vcurrent_fps\x18\t \x01(\x01R\n" +
	"currentFps\x12%\n" +
	"\x0estatus_message\x18\n" +
	" \x01(\tR\rstatusMessage\"O\n" +
	"\x1cStopTranscodeProviderRequest\x12/\n" +
	"\x06handle\x18\x01 \x01(\v2\x17.plugin.TranscodeHandleR\x06handle\"O\n" +
	"\x1dStopTranscodeProviderResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"P\n" +
	"\x12StartStreamRequest\x12:\n" +
	"\arequest\x18\x01 \x01(\v2 .plugin.TranscodeProviderRequestR\arequest\"Y\n" +
	"\x13StartStreamResponse\x12,\n" +
	"\x06handle\x18\x01 \x01(\v2\x14.plugin.StreamHandleR\x06handle\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xc4\x01\n" +
	"\fStreamHandle\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03R\tstartTime\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x14\n" +
	"\x05codec\x18\x05 \x01(\tR\x05codec\x12!\n" +
	"\fprivate_data\x18\x06 \x01(\tR\vprivateData\"D\n" +
	"\x14GetStreamDataRequest\x12,\n" +
	"\x06handle\x18\x01 \x01(\v2\x14.plugin.StreamHandleR\x06handle\"M\n" +
	"\x0fStreamDataChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x10\n" +
	"\x03eof\x18\x02 \x01(\bR\x03eof\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"A\n" +
	"\x11StopStreamRequest\x12,\n" +
	"\x06handle\x18\x01 \x01(\v2\x14.plugin.StreamHandleR\x06handle\"D\n" +
	"\x12StopStreamResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x1d\n" +
	"\x1bGetDashboardSectionsRequest\"j\n" +
	"\x1cGetDashboardSectionsResponse\x124\n" +
	"\bsections\x18\x01 \x03(\v2\x18.plugin.DashboardSectionR\bsections\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"3\n" +
	"\x12GetMainDataRequest\x12\x1d\n" +
	"\n" +
	"section_id\x18\x01 \x01(\tR\tsectionId\"H\n" +
	"\x13GetMainDataResponse\x12\x1b\n" +
	"\tdata_json\x18\x01 \x01(\tR\bdataJson\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"3\n" +
	"\x12GetNerdDataRequest\x12\x1d\n" +
	"\n" +
	"section_id\x18\x01 \x01(\tR\tsectionId\"H\n" +
	"\x13GetNerdDataResponse\x12\x1b\n" +
	"\tdata_json\x18\x01 \x01(\tR\bdataJson\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x80\x01\n" +
	"\x11GetMetricsRequest\x12\x1d\n" +
	"\n" +
	"section_id\x18\x01 \x01(\tR\tsectionId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\x03R\aendTime\x12\x12\n" +
	"\x04step\x18\x04 \x01(\tR\x04step\"W\n" +
	"\x12GetMetricsResponse\x12+\n" +
	"\x06points\x18\x01 \x03(\v2\x13.plugin.MetricPointR\x06points\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xaa\x02\n" +
	"\x10DashboardSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tplugin_id\x18\x02 \x01(\tR\bpluginId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x126\n" +
	"\x06config\x18\b \x01(\v2\x1e.plugin.DashboardSectionConfigR\x06config\x125\n" +
	"\bmanifest\x18\t \x01(\v2\x19.plugin.DashboardManifestR\bmanifest\"\x8d\x02\n" +
	"\x16DashboardSectionConfig\x12)\n" +
	"\x10refresh_interval\x18\x01 \x01(\x05R\x0frefreshInterval\x12+\n" +
	"\x11supports_realtime\x18\x02 \x01(\bR\x10supportsRealtime\x12$\n" +
	"\x0ehas_nerd_panel\x18\x03 \x01(\bR\fhasNerdPanel\x12#\n" +
	"\rrequires_auth\x18\x04 \x01(\bR\frequiresAuth\x12(\n" +
	"\x10min_refresh_rate\x18\x05 \x01(\x05R\x0eminRefreshRate\x12&\n" +
	"\x0fmax_data_points\x18\x06 \x01(\x05R\rmaxDataPoints\"\xf0\x01\n" +
	"\x11DashboardManifest\x12%\n" +
	"\x0ecomponent_type\x18\x01 \x01(\tR\rcomponentType\x121\n" +
	"\aactions\x18\x02 \x03(\v2\x17.plugin.DashboardActionR\aactions\x12D\n" +
	"\tui_schema\x18\x03 \x03(\v2'.plugin.DashboardManifest.UiSchemaEntryR\buiSchema\x1a;\n" +
	"\rUiSchemaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x01\n" +
	"\x0fDashboardAction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12\x14\n" +
	"\x05style\x18\x04 \x01(\tR\x05style\x12\x1a\n" +
	"\bendpoint\x18\x05 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06method\x18\x06 \x01(\tR\x06method\x12\x18\n" +
	"\aconfirm\x18\a \x01(\bR\aconfirm\x12!\n" +
	"\fpayload_json\x18\b \x01(\tR\vpayloadJson\x12\x1a\n" +
	"\bshortcut\x18\t \x01(\tR\bshortcut\"\xda\x01\n" +
	"\vMetricPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x127\n" +
	"\x06labels\x18\x03 \x03(\v2\x1f.plugin.MetricPoint.LabelsEntryR\x06labels\x12#\n" +
	"\rmetadata_json\x18\x04 \x01(\tR\fmetadataJson\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa9\x02\n" +
	"\rPluginService\x12C\n" +
	"\n" +
	"Initialize\x12\x19.plugin.InitializeRequest\x1a\x1a.plugin.InitializeResponse\x124\n" +
	"\x05Start\x12\x14.plugin.StartRequest\x1a\x15.plugin.StartResponse\x121\n" +
	"\x04Stop\x12\x13.plugin.StopRequest\x1a\x14.plugin.StopResponse\x121\n" +
	"\x04Info\x12\x13.plugin.InfoRequest\x1a\x14.plugin.InfoResponse\x127\n" +
	"\x06Health\x12\x15.plugin.HealthRequest\x1a\x16.plugin.HealthResponse2\x88\x02\n" +
	"\x16MetadataScraperService\x12@\n" +
	"\tCanHandle\x12\x18.plugin.CanHandleRequest\x1a\x19.plugin.CanHandleResponse\x12R\n" +
	"\x0fExtractMetadata\x12\x1e.plugin.ExtractMetadataRequest\x1a\x1f.plugin.ExtractMetadataResponse\x12X\n" +
	"\x11GetSupportedTypes\x12 .plugin.GetSupportedTypesRequest\x1a!.plugin.GetSupportedTypesResponse2\x93\x02\n" +
	"\x12ScannerHookService\x12[\n" +
	"\x12OnMediaFileScanned\x12!.plugin.OnMediaFileScannedRequest\x1a\".plugin.OnMediaFileScannedResponse\x12L\n" +
	"\rOnScanStarted\x12\x1c.plugin.OnScanStartedRequest\x1a\x1d.plugin.OnScanStartedResponse\x12R\n" +
	"\x0fOnScanCompleted\x12\x1e.plugin.OnScanCompletedRequest\x1a\x1f.plugin.OnScanCompletedResponse2\xe0\x01\n" +
	"\fAssetService\x12@\n" +
	"\tSaveAsset\x12\x18.plugin.SaveAssetRequest\x1a\x19.plugin.SaveAssetResponse\x12F\n" +
	"\vAssetExists\x12\x1a.plugin.AssetExistsRequest\x1a\x1b.plugin.AssetExistsResponse\x12F\n" +
	"\vRemoveAsset\x12\x1a.plugin.RemoveAssetRequest\x1a\x1b.plugin.RemoveAssetResponse2\xce\x01\n" +
	"\x0fDatabaseService\x12@\n" +
	"\tGetModels\x12\x18.plugin.GetModelsRequest\x1a\x19.plugin.GetModelsResponse\x12:\n" +
	"\aMigrate\x12\x16.plugin.MigrateRequest\x1a\x17.plugin.MigrateResponse\x12=\n" +
	"\bRollback\x12\x17.plugin.RollbackRequest\x1a\x18.plugin.RollbackResponse2\xb1\x01\n" +
	"\x10AdminPageService\x12L\n" +
	"\rGetAdminPages\x12\x1c.plugin.GetAdminPagesRequest\x1a\x1d.plugin.GetAdminPagesResponse\x12O\n" +
	"\x0eRegisterRoutes\x12\x1d.plugin.RegisterRoutesRequest\x1a\x1e.plugin.RegisterRoutesResponse2x\n" +
	"\x16APIRegistrationService\x12^\n" +
	"\x13GetRegisteredRoutes\x12\".plugin.GetRegisteredRoutesRequest\x1a#.plugin.GetRegisteredRoutesResponse2\xae\x01\n" +
	"\rSearchService\x127\n" +
	"\x06Search\x12\x15.plugin.SearchRequest\x1a\x16.plugin.SearchResponse\x12d\n" +
	"\x15GetSearchCapabilities\x12$.plugin.GetSearchCapabilitiesRequest\x1a%.plugin.GetSearchCapabilitiesResponse2\xf4\x06\n" +
	"\x1aTranscodingProviderService\x12R\n" +
	"\x0fGetProviderInfo\x12\x1e.plugin.GetProviderInfoRequest\x1a\x1f.plugin.GetProviderInfoResponse\x12^\n" +
	"\x13GetSupportedFormats\x12\".plugin.GetSupportedFormatsRequest\x1a#.plugin.GetSupportedFormatsResponse\x12j\n" +
	"\x17GetHardwareAccelerators\x12&.plugin.GetHardwareAcceleratorsRequest\x1a'.plugin.GetHardwareAcceleratorsResponse\x12X\n" +
	"\x11GetQualityPresets\x12 .plugin.GetQualityPresetsRequest\x1a!.plugin.GetQualityPresetsResponse\x12_\n" +
	"\x0eStartTranscode\x12%.plugin.StartTranscodeProviderRequest\x1a&.plugin.StartTranscodeProviderResponse\x12F\n" +
	"\vGetProgress\x12\x1a.plugin.GetProgressRequest\x1a\x1b.plugin.GetProgressResponse\x12\\\n" +
	"\rStopTranscode\x12$.plugin.StopTranscodeProviderRequest\x1a%.plugin.StopTranscodeProviderResponse\x12F\n" +
	"\vStartStream\x12\x1a.plugin.StartStreamRequest\x1a\x1b.plugin.StartStreamResponse\x12H\n" +
	"\rGetStreamData\x12\x1c.plugin.GetStreamDataRequest\x1a\x17.plugin.StreamDataChunk0\x01\x12C\n" +
	"\n" +
	"StopStream\x12\x19.plugin.StopStreamRequest\x1a\x1a.plugin.StopStreamResponse2\xca\x02\n" +
	"\x10DashboardService\x12a\n" +
	"\x14GetDashboardSections\x12#.plugin.GetDashboardSectionsRequest\x1a$.plugin.GetDashboardSectionsResponse\x12F\n" +
	"\vGetMainData\x12\x1a.plugin.GetMainDataRequest\x1a\x1b.plugin.GetMainDataResponse\x12F\n" +
	"\vGetNerdData\x12\x1a.plugin.GetNerdDataRequest\x1a\x1b.plugin.GetNerdDataResponse\x12C\n" +
	"\n" +
	"GetMetrics\x12\x19.plugin.GetMetricsRequest\x1a\x1a.plugin.GetMetricsResponseB-Z+github.com/mantonx/viewra/sdk/protob\x06proto3"

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData []byte
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)))
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 101)
var file_plugin_proto_goTypes = []any{
	(*APIRoute)(nil),                        // 0: plugin.APIRoute
	(*GetRegisteredRoutesRequest)(nil),      // 1: plugin.GetRegisteredRoutesRequest
	(*GetRegisteredRoutesResponse)(nil),     // 2: plugin.GetRegisteredRoutesResponse
	(*SaveAssetRequest)(nil),                // 3: plugin.SaveAssetRequest
	(*SaveAssetResponse)(nil),               // 4: plugin.SaveAssetResponse
	(*AssetExistsRequest)(nil),              // 5: plugin.AssetExistsRequest
	(*AssetExistsResponse)(nil),             // 6: plugin.AssetExistsResponse
	(*RemoveAssetRequest)(nil),              // 7: plugin.RemoveAssetRequest
	(*RemoveAssetResponse)(nil),             // 8: plugin.RemoveAssetResponse
	(*SearchRequest)(nil),                   // 9: plugin.SearchRequest
	(*SearchResponse)(nil),                  // 10: plugin.SearchResponse
	(*SearchResult)(nil),                    // 11: plugin.SearchResult
	(*GetSearchCapabilitiesRequest)(nil),    // 12: plugin.GetSearchCapabilitiesRequest
	(*GetSearchCapabilitiesResponse)(nil),   // 13: plugin.GetSearchCapabilitiesResponse
	(*InitializeRequest)(nil),               // 14: plugin.InitializeRequest
	(*InitializeResponse)(nil),              // 15: plugin.InitializeResponse
	(*StartRequest)(nil),                    // 16: plugin.StartRequest
	(*StartResponse)(nil),                   // 17: plugin.StartResponse
	(*StopRequest)(nil),                     // 18: plugin.StopRequest
	(*StopResponse)(nil),                    // 19: plugin.StopResponse
	(*InfoRequest)(nil),                     // 20: plugin.InfoRequest
	(*InfoResponse)(nil),                    // 21: plugin.InfoResponse
	(*HealthRequest)(nil),                   // 22: plugin.HealthRequest
	(*HealthResponse)(nil),                  // 23: plugin.HealthResponse
	(*CanHandleRequest)(nil),                // 24: plugin.CanHandleRequest
	(*CanHandleResponse)(nil),               // 25: plugin.CanHandleResponse
	(*ExtractMetadataRequest)(nil),          // 26: plugin.ExtractMetadataRequest
	(*ExtractMetadataResponse)(nil),         // 27: plugin.ExtractMetadataResponse
	(*GetSupportedTypesRequest)(nil),        // 28: plugin.GetSupportedTypesRequest
	(*GetSupportedTypesResponse)(nil),       // 29: plugin.GetSupportedTypesResponse
	(*OnMediaFileScannedRequest)(nil),       // 30: plugin.OnMediaFileScannedRequest
	(*OnMediaFileScannedResponse)(nil),      // 31: plugin.OnMediaFileScannedResponse
	(*OnScanStartedRequest)(nil),            // 32: plugin.OnScanStartedRequest
	(*OnScanStartedResponse)(nil),           // 33: plugin.OnScanStartedResponse
	(*OnScanCompletedRequest)(nil),          // 34: plugin.OnScanCompletedRequest
	(*OnScanCompletedResponse)(nil),         // 35: plugin.OnScanCompletedResponse
	(*GetModelsRequest)(nil),                // 36: plugin.GetModelsRequest
	(*GetModelsResponse)(nil),               // 37: plugin.GetModelsResponse
	(*MigrateRequest)(nil),                  // 38: plugin.MigrateRequest
	(*MigrateResponse)(nil),                 // 39: plugin.MigrateResponse
	(*RollbackRequest)(nil),                 // 40: plugin.RollbackRequest
	(*RollbackResponse)(nil),                // 41: plugin.RollbackResponse
	(*GetAdminPagesRequest)(nil),            // 42: plugin.GetAdminPagesRequest
	(*GetAdminPagesResponse)(nil),           // 43: plugin.GetAdminPagesResponse
	(*RegisterRoutesRequest)(nil),           // 44: plugin.RegisterRoutesRequest
	(*RegisterRoutesResponse)(nil),          // 45: plugin.RegisterRoutesResponse
	(*PluginContext)(nil),                   // 46: plugin.PluginContext
	(*PluginInfo)(nil),                      // 47: plugin.PluginInfo
	(*AdminPageConfig)(nil),                 // 48: plugin.AdminPageConfig
	(*GetProviderInfoRequest)(nil),          // 49: plugin.GetProviderInfoRequest
	(*GetProviderInfoResponse)(nil),         // 50: plugin.GetProviderInfoResponse
	(*ProviderInfo)(nil),                    // 51: plugin.ProviderInfo
	(*GetSupportedFormatsRequest)(nil),      // 52: plugin.GetSupportedFormatsRequest
	(*GetSupportedFormatsResponse)(nil),     // 53: plugin.GetSupportedFormatsResponse
	(*ContainerFormat)(nil),                 // 54: plugin.ContainerFormat
	(*GetHardwareAcceleratorsRequest)(nil),  // 55: plugin.GetHardwareAcceleratorsRequest
	(*GetHardwareAcceleratorsResponse)(nil), // 56: plugin.GetHardwareAcceleratorsResponse
	(*HardwareAccelerator)(nil),             // 57: plugin.HardwareAccelerator
	(*GetQualityPresetsRequest)(nil),        // 58: plugin.GetQualityPresetsRequest
	(*GetQualityPresetsResponse)(nil),       // 59: plugin.GetQualityPresetsResponse
	(*QualityPreset)(nil),                   // 60: plugin.QualityPreset
	(*StartTranscodeProviderRequest)(nil),   // 61: plugin.StartTranscodeProviderRequest
	(*StartTranscodeProviderResponse)(nil),  // 62: plugin.StartTranscodeProviderResponse
	(*TranscodeProviderRequest)(nil),        // 63: plugin.TranscodeProviderRequest
	(*TranscodeHandle)(nil),                 // 64: plugin.TranscodeHandle
	(*GetProgressRequest)(nil),              // 65: plugin.GetProgressRequest
	(*GetProgressResponse)(nil),             // 66: plugin.GetProgressResponse
	(*TranscodingProgress)(nil),             // 67: plugin.TranscodingProgress
	(*StopTranscodeProviderRequest)(nil),    // 68: plugin.StopTranscodeProviderRequest
	(*StopTranscodeProviderResponse)(nil),   // 69: plugin.StopTranscodeProviderResponse
	(*StartStreamRequest)(nil),              // 70: plugin.StartStreamRequest
	(*StartStreamResponse)(nil),             // 71: plugin.StartStreamResponse
	(*StreamHandle)(nil),                    // 72: plugin.StreamHandle
	(*GetStreamDataRequest)(nil),            // 73: plugin.GetStreamDataRequest
	(*StreamDataChunk)(nil),                 // 74: plugin.StreamDataChunk
	(*StopStreamRequest)(nil),               // 75: plugin.StopStreamRequest
	(*StopStreamResponse)(nil),              // 76: plugin.StopStreamResponse
	(*GetDashboardSectionsRequest)(nil),     // 77: plugin.GetDashboardSectionsRequest
	(*GetDashboardSectionsResponse)(nil),    // 78: plugin.GetDashboardSectionsResponse
	(*GetMainDataRequest)(nil),              // 79: plugin.GetMainDataRequest
	(*GetMainDataResponse)(nil),             // 80: plugin.GetMainDataResponse
	(*GetNerdDataRequest)(nil),              // 81: plugin.GetNerdDataRequest
	(*GetNerdDataResponse)(nil),             // 82: plugin.GetNerdDataResponse
	(*GetMetricsRequest)(nil),               // 83: plugin.GetMetricsRequest
	(*GetMetricsResponse)(nil),              // 84: plugin.GetMetricsResponse
	(*DashboardSection)(nil),                // 85: plugin.DashboardSection
	(*DashboardSectionConfig)(nil),          // 86: plugin.DashboardSectionConfig
	(*DashboardManifest)(nil),               // 87: plugin.DashboardManifest
	(*DashboardAction)(nil),                 // 88: plugin.DashboardAction
	(*MetricPoint)(nil),                     // 89: plugin.MetricPoint
	nil,                                     // 90: plugin.SaveAssetRequest.MetadataEntry
	nil,                                     // 91: plugin.SearchRequest.QueryEntry
	nil,                                     // 92: plugin.SearchResult.MetadataEntry
	nil,                                     // 93: plugin.ExtractMetadataResponse.MetadataEntry
	nil,                                     // 94: plugin.OnMediaFileScannedRequest.MetadataEntry
	nil,                                     // 95: plugin.OnScanCompletedRequest.StatsEntry
	nil,                                     // 96: plugin.PluginContext.ConfigEntry
	nil,                                     // 97: plugin.ProviderInfo.CapabilitiesEntry
	nil,                                     // 98: plugin.TranscodeProviderRequest.ExtraOptionsEntry
	nil,                                     // 99: plugin.DashboardManifest.UiSchemaEntry
	nil,                                     // 100: plugin.MetricPoint.LabelsEntry
}
var file_plugin_proto_depIdxs = []int32{
	0,   // 0: plugin.GetRegisteredRoutesResponse.routes:type_name -> plugin.APIRoute
	90,  // 1: plugin.SaveAssetRequest.metadata:type_name -> plugin.SaveAssetRequest.MetadataEntry
	91,  // 2: plugin.SearchRequest.query:type_name -> plugin.SearchRequest.QueryEntry
	11,  // 3: plugin.SearchResponse.results:type_name -> plugin.SearchResult
	92,  // 4: plugin.SearchResult.metadata:type_name -> plugin.SearchResult.MetadataEntry
	46,  // 5: plugin.InitializeRequest.context:type_name -> plugin.PluginContext
	47,  // 6: plugin.InfoResponse.info:type_name -> plugin.PluginInfo
	93,  // 7: plugin.ExtractMetadataResponse.metadata:type_name -> plugin.ExtractMetadataResponse.MetadataEntry
	94,  // 8: plugin.OnMediaFileScannedRequest.metadata:type_name -> plugin.OnMediaFileScannedRequest.MetadataEntry
	95,  // 9: plugin.OnScanCompletedRequest.stats:type_name -> plugin.OnScanCompletedRequest.StatsEntry
	48,  // 10: plugin.GetAdminPagesResponse.pages:type_name -> plugin.AdminPageConfig
	96,  // 11: plugin.PluginContext.config:type_name -> plugin.PluginContext.ConfigEntry
	51,  // 12: plugin.GetProviderInfoResponse.info:type_name -> plugin.ProviderInfo
	97,  // 13: plugin.ProviderInfo.capabilities:type_name -> plugin.ProviderInfo.CapabilitiesEntry
	54,  // 14: plugin.GetSupportedFormatsResponse.formats:type_name -> plugin.ContainerFormat
	57,  // 15: plugin.GetHardwareAcceleratorsResponse.accelerators:type_name -> plugin.HardwareAccelerator
	60,  // 16: plugin.GetQualityPresetsResponse.presets:type_name -> plugin.QualityPreset
	63,  // 17: plugin.StartTranscodeProviderRequest.request:type_name -> plugin.TranscodeProviderRequest
	64,  // 18: plugin.StartTranscodeProviderResponse.handle:type_name -> plugin.TranscodeHandle
	98,  // 19: plugin.TranscodeProviderRequest.extra_options:type_name -> plugin.TranscodeProviderRequest.ExtraOptionsEntry
	64,  // 20: plugin.GetProgressRequest.handle:type_name -> plugin.TranscodeHandle
	67,  // 21: plugin.GetProgressResponse.progress:type_name -> plugin.TranscodingProgress
	64,  // 22: plugin.StopTranscodeProviderRequest.handle:type_name -> plugin.TranscodeHandle
	63,  // 23: plugin.StartStreamRequest.request:type_name -> plugin.TranscodeProviderRequest
	72,  // 24: plugin.StartStreamResponse.handle:type_name -> plugin.StreamHandle
	72,  // 25: plugin.GetStreamDataRequest.handle:type_name -> plugin.StreamHandle
	72,  // 26: plugin.StopStreamRequest.handle:type_name -> plugin.StreamHandle
	85,  // 27: plugin.GetDashboardSectionsResponse.sections:type_name -> plugin.DashboardSection
	89,  // 28: plugin.GetMetricsResponse.points:type_name -> plugin.MetricPoint
	86,  // 29: plugin.DashboardSection.config:type_name -> plugin.DashboardSectionConfig
	87,  // 30: plugin.DashboardSection.manifest:type_name -> plugin.DashboardManifest
	88,  // 31: plugin.DashboardManifest.actions:type_name -> plugin.DashboardAction
	99,  // 32: plugin.DashboardManifest.ui_schema:type_name -> plugin.DashboardManifest.UiSchemaEntry
	100, // 33: plugin.MetricPoint.labels:type_name -> plugin.MetricPoint.LabelsEntry
	14,  // 34: plugin.PluginService.Initialize:input_type -> plugin.InitializeRequest
	16,  // 35: plugin.PluginService.Start:input_type -> plugin.StartRequest
	18,  // 36: plugin.PluginService.Stop:input_type -> plugin.StopRequest
	20,  // 37: plugin.PluginService.Info:input_type -> plugin.InfoRequest
	22,  // 38: plugin.PluginService.Health:input_type -> plugin.HealthRequest
	24,  // 39: plugin.MetadataScraperService.CanHandle:input_type -> plugin.CanHandleRequest
	26,  // 40: plugin.MetadataScraperService.ExtractMetadata:input_type -> plugin.ExtractMetadataRequest
	28,  // 41: plugin.MetadataScraperService.GetSupportedTypes:input_type -> plugin.GetSupportedTypesRequest
	30,  // 42: plugin.ScannerHookService.OnMediaFileScanned:input_type -> plugin.OnMediaFileScannedRequest
	32,  // 43: plugin.ScannerHookService.OnScanStarted:input_type -> plugin.OnScanStartedRequest
	34,  // 44: plugin.ScannerHookService.OnScanCompleted:input_type -> plugin.OnScanCompletedRequest
	3,   // 45: plugin.AssetService.SaveAsset:input_type -> plugin.SaveAssetRequest
	5,   // 46: plugin.AssetService.AssetExists:input_type -> plugin.AssetExistsRequest
	7,   // 47: plugin.AssetService.RemoveAsset:input_type -> plugin.RemoveAssetRequest
	36,  // 48: plugin.DatabaseService.GetModels:input_type -> plugin.GetModelsRequest
	38,  // 49: plugin.DatabaseService.Migrate:input_type -> plugin.MigrateRequest
	40,  // 50: plugin.DatabaseService.Rollback:input_type -> plugin.RollbackRequest
	42,  // 51: plugin.AdminPageService.GetAdminPages:input_type -> plugin.GetAdminPagesRequest
	44,  // 52: plugin.AdminPageService.RegisterRoutes:input_type -> plugin.RegisterRoutesRequest
	1,   // 53: plugin.APIRegistrationService.GetRegisteredRoutes:input_type -> plugin.GetRegisteredRoutesRequest
	9,   // 54: plugin.SearchService.Search:input_type -> plugin.SearchRequest
	12,  // 55: plugin.SearchService.GetSearchCapabilities:input_type -> plugin.GetSearchCapabilitiesRequest
	49,  // 56: plugin.TranscodingProviderService.GetProviderInfo:input_type -> plugin.GetProviderInfoRequest
	52,  // 57: plugin.TranscodingProviderService.GetSupportedFormats:input_type -> plugin.GetSupportedFormatsRequest
	55,  // 58: plugin.TranscodingProviderService.GetHardwareAccelerators:input_type -> plugin.GetHardwareAcceleratorsRequest
	58,  // 59: plugin.TranscodingProviderService.GetQualityPresets:input_type -> plugin.GetQualityPresetsRequest
	61,  // 60: plugin.TranscodingProviderService.StartTranscode:input_type -> plugin.StartTranscodeProviderRequest
	65,  // 61: plugin.TranscodingProviderService.GetProgress:input_type -> plugin.GetProgressRequest
	68,  // 62: plugin.TranscodingProviderService.StopTranscode:input_type -> plugin.StopTranscodeProviderRequest
	70,  // 63: plugin.TranscodingProviderService.StartStream:input_type -> plugin.StartStreamRequest
	73,  // 64: plugin.TranscodingProviderService.GetStreamData:input_type -> plugin.GetStreamDataRequest
	75,  // 65: plugin.TranscodingProviderService.StopStream:input_type -> plugin.StopStreamRequest
	77,  // 66: plugin.DashboardService.GetDashboardSections:input_type -> plugin.GetDashboardSectionsRequest
	79,  // 67: plugin.DashboardService.GetMainData:input_type -> plugin.GetMainDataRequest
	81,  // 68: plugin.DashboardService.GetNerdData:input_type -> plugin.GetNerdDataRequest
	83,  // 69: plugin.DashboardService.GetMetrics:input_type -> plugin.GetMetricsRequest
	15,  // 70: plugin.PluginService.Initialize:output_type -> plugin.InitializeResponse
	17,  // 71: plugin.PluginService.Start:output_type -> plugin.StartResponse
	19,  // 72: plugin.PluginService.Stop:output_type -> plugin.StopResponse
	21,  // 73: plugin.PluginService.Info:output_type -> plugin.InfoResponse
	23,  // 74: plugin.PluginService.Health:output_type -> plugin.HealthResponse
	25,  // 75: plugin.MetadataScraperService.CanHandle:output_type -> plugin.CanHandleResponse
	27,  // 76: plugin.MetadataScraperService.ExtractMetadata:output_type -> plugin.ExtractMetadataResponse
	29,  // 77: plugin.MetadataScraperService.GetSupportedTypes:output_type -> plugin.GetSupportedTypesResponse
	31,  // 78: plugin.ScannerHookService.OnMediaFileScanned:output_type -> plugin.OnMediaFileScannedResponse
	33,  // 79: plugin.ScannerHookService.OnScanStarted:output_type -> plugin.OnScanStartedResponse
	35,  // 80: plugin.ScannerHookService.OnScanCompleted:output_type -> plugin.OnScanCompletedResponse
	4,   // 81: plugin.AssetService.SaveAsset:output_type -> plugin.SaveAssetResponse
	6,   // 82: plugin.AssetService.AssetExists:output_type -> plugin.AssetExistsResponse
	8,   // 83: plugin.AssetService.RemoveAsset:output_type -> plugin.RemoveAssetResponse
	37,  // 84: plugin.DatabaseService.GetModels:output_type -> plugin.GetModelsResponse
	39,  // 85: plugin.DatabaseService.Migrate:output_type -> plugin.MigrateResponse
	41,  // 86: plugin.DatabaseService.Rollback:output_type -> plugin.RollbackResponse
	43,  // 87: plugin.AdminPageService.GetAdminPages:output_type -> plugin.GetAdminPagesResponse
	45,  // 88: plugin.AdminPageService.RegisterRoutes:output_type -> plugin.RegisterRoutesResponse
	2,   // 89: plugin.APIRegistrationService.GetRegisteredRoutes:output_type -> plugin.GetRegisteredRoutesResponse
	10,  // 90: plugin.SearchService.Search:output_type -> plugin.SearchResponse
	13,  // 91: plugin.SearchService.GetSearchCapabilities:output_type -> plugin.GetSearchCapabilitiesResponse
	50,  // 92: plugin.TranscodingProviderService.GetProviderInfo:output_type -> plugin.GetProviderInfoResponse
	53,  // 93: plugin.TranscodingProviderService.GetSupportedFormats:output_type -> plugin.GetSupportedFormatsResponse
	56,  // 94: plugin.TranscodingProviderService.GetHardwareAccelerators:output_type -> plugin.GetHardwareAcceleratorsResponse
	59,  // 95: plugin.TranscodingProviderService.GetQualityPresets:output_type -> plugin.GetQualityPresetsResponse
	62,  // 96: plugin.TranscodingProviderService.StartTranscode:output_type -> plugin.StartTranscodeProviderResponse
	66,  // 97: plugin.TranscodingProviderService.GetProgress:output_type -> plugin.GetProgressResponse
	69,  // 98: plugin.TranscodingProviderService.StopTranscode:output_type -> plugin.StopTranscodeProviderResponse
	71,  // 99: plugin.TranscodingProviderService.StartStream:output_type -> plugin.StartStreamResponse
	74,  // 100: plugin.TranscodingProviderService.GetStreamData:output_type -> plugin.StreamDataChunk
	76,  // 101: plugin.TranscodingProviderService.StopStream:output_type -> plugin.StopStreamResponse
	78,  // 102: plugin.DashboardService.GetDashboardSections:output_type -> plugin.GetDashboardSectionsResponse
	80,  // 103: plugin.DashboardService.GetMainData:output_type -> plugin.GetMainDataResponse
	82,  // 104: plugin.DashboardService.GetNerdData:output_type -> plugin.GetNerdDataResponse
	84,  // 105: plugin.DashboardService.GetMetrics:output_type -> plugin.GetMetricsResponse
	70,  // [70:106] is the sub-list for method output_type
	34,  // [34:70] is the sub-list for method input_type
	34,  // [34:34] is the sub-list for extension type_name
	34,  // [34:34] is the sub-list for extension extendee
	0,   // [0:34] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   101,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
