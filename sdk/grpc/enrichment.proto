syntax = "proto3";

package enrichment.v1;

option go_package = "github.com/mantonx/viewra/api/proto/enrichment";

import "google/protobuf/timestamp.proto";

// EnrichmentService provides enrichment registration and management
service EnrichmentService {
  // RegisterEnrichment registers enriched metadata for a media file
  rpc RegisterEnrichment(RegisterEnrichmentRequest) returns (RegisterEnrichmentResponse);
  
  // GetEnrichmentStatus returns enrichment status for a media file
  rpc GetEnrichmentStatus(GetEnrichmentStatusRequest) returns (GetEnrichmentStatusResponse);
  
  // ListEnrichmentSources returns all enrichment sources
  rpc ListEnrichmentSources(ListEnrichmentSourcesRequest) returns (ListEnrichmentSourcesResponse);
  
  // UpdateEnrichmentSource updates an enrichment source configuration
  rpc UpdateEnrichmentSource(UpdateEnrichmentSourceRequest) returns (UpdateEnrichmentSourceResponse);
  
  // TriggerEnrichmentJob manually triggers enrichment application for a media file
  rpc TriggerEnrichmentJob(TriggerEnrichmentJobRequest) returns (TriggerEnrichmentJobResponse);
}

// RegisterEnrichmentRequest contains enrichment data to register
message RegisterEnrichmentRequest {
  string media_file_id = 1;
  string source_name = 2;
  map<string, string> enrichments = 3; // field_name -> enriched_value
  double confidence_score = 4; // 0.0 - 1.0
  map<string, string> match_metadata = 5; // Additional metadata about the match
}

message RegisterEnrichmentResponse {
  bool success = 1;
  string message = 2;
  string job_id = 3; // ID of the created enrichment job
}

// GetEnrichmentStatusRequest requests enrichment status for a media file
message GetEnrichmentStatusRequest {
  string media_file_id = 1;
}

message GetEnrichmentStatusResponse {
  string media_file_id = 1;
  int32 total_enrichments = 2;
  int32 applied_count = 3;
  int32 pending_count = 4;
  map<string, int32> sources = 5; // source_name -> count
  map<string, FieldEnrichmentStatus> fields = 6; // field_name -> status
}

message FieldEnrichmentStatus {
  repeated EnrichmentInfo enrichments = 1;
  string best_source = 2;
  bool applied = 3;
}

message EnrichmentInfo {
  string source = 1;
  string value = 2;
  double confidence = 3;
  bool applied = 4;
  int32 priority = 5;
}

// ListEnrichmentSourcesRequest requests all enrichment sources
message ListEnrichmentSourcesRequest {
  // Empty for now, could add filtering in the future
}

message ListEnrichmentSourcesResponse {
  repeated EnrichmentSource sources = 1;
}

message EnrichmentSource {
  uint32 id = 1;
  string name = 2;
  int32 priority = 3;
  repeated string media_types = 4;
  bool enabled = 5;
  google.protobuf.Timestamp last_sync = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// UpdateEnrichmentSourceRequest updates an enrichment source
message UpdateEnrichmentSourceRequest {
  string source_name = 1;
  int32 priority = 2;
  bool enabled = 3;
}

message UpdateEnrichmentSourceResponse {
  bool success = 1;
  string message = 2;
  EnrichmentSource source = 3;
}

// TriggerEnrichmentJobRequest triggers enrichment application
message TriggerEnrichmentJobRequest {
  string media_file_id = 1;
}

message TriggerEnrichmentJobResponse {
  bool success = 1;
  string message = 2;
  string job_id = 3;
} 